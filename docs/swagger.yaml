definitions:
  model.BaseResponse:
    properties:
      msg:
        type: string
      success:
        type: boolean
    type: object
  model.HealthResponse:
    properties:
      status:
        type: string
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.LoginResponse:
    properties:
      msg:
        type: string
      success:
        type: boolean
      token:
        type: string
    type: object
  model.RefreshResponse:
    properties:
      msg:
        type: string
      success:
        type: boolean
      token:
        type: string
    type: object
  model.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      surname:
        type: string
    type: object
  model.RegisterResponse:
    properties:
      msg:
        type: string
      success:
        type: boolean
      token:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user credentials and returns a JWT token upon successful
        login.
      parameters:
      - description: Login Credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User successfully logged in with token returned
          schema:
            $ref: '#/definitions/model.LoginResponse'
        "400":
          description: Invalid request format or content
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized access due to invalid credentials
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: User login
  /api/v1/auth/logout:
    post:
      description: delete jwt token from storage.
      parameters:
      - description: Bearer [JWT token]
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: delete jwt token from storage.
  /api/v1/auth/refresh:
    post:
      description: Validates the existing JWT token from the Authorization header
        and issues a new token.
      parameters:
      - description: Bearer [current JWT token]
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Token successfully refreshed
          schema:
            $ref: '#/definitions/model.RefreshResponse'
        "400":
          description: Missing or malformed auth token
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "401":
          description: Unauthorized access due to invalid or expired token
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: Refresh JWT token
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user with the provided details and returns a JWT
        token upon successful registration.
      parameters:
      - description: Registration Details
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User successfully created with token returned
          schema:
            $ref: '#/definitions/model.RegisterResponse'
        "400":
          description: Invalid request format or content
          schema:
            $ref: '#/definitions/model.BaseResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.BaseResponse'
      summary: User registration
  /health:
    get:
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.HealthResponse'
      summary: show the status of server.
swagger: "2.0"
